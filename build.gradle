plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'java-library'
    id 'maven-publish'
}

base {
	archivesName = project.archives_base_name
}

version = project.mod_version
group = project.maven_group
repositories {
    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/'
    }
    // Repository for pircbotx.
    maven { url 'https://jitpack.io' }
    mavenCentral() // for transitive dependencies
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
}
dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

//    modImplementation "io.github.ladysnake:satin:${satin_version}"
//    include "io.github.ladysnake:satin:${satin_version}"

    // Twitch IRC chat Integration
    implementation "com.github.pircbotx:pircbotx:${pircbotx_version}"
    include "com.github.pircbotx:pircbotx:${pircbotx_version}"
        // Needed by pircbotx
//        implementation "org.slf4j:slf4j-api:${slf4j_version}" //group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
//        include "org.slf4j:slf4j-api:${slf4j_version}"

    // Discord JDA.
    implementation("net.dv8tion:JDA:${jda_version}") {
        exclude module: 'opus-java'
    }
    include("net.dv8tion:JDA:${jda_version}") {
        exclude module: 'opus-java'
    }
    include "net.sf.trove4j:trove4j:3.0.3"
    include 'org.apache.commons:commons-collections4:4.1'
    include 'com.neovisionaries:nv-websocket-client:2.14'
    include 'com.squareup.okhttp3:okhttp:3.14.9'
    include 'com.squareup.okio:okio:1.17.2'
    include 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    include 'com.fasterxml.jackson.core:jackson-annotations:2.10.1'
    include 'com.fasterxml.jackson.core:jackson-core:2.10.1'

    // Websocket Server for Overlay
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'
    include 'org.java-websocket:Java-WebSocket:1.5.3'

}

loom {
    runs {
        datagenClient {
            inherit client
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=entropy"
            runDir "build/datagen"
        }
    }
}

sourceSets.main.resources {
	srcDir 'src/main/generated'
}

processResources {
    exclude ".cache"
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from "LICENSE"
	exclude('me/juancarloscp52/entropy/datagen/**')
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
